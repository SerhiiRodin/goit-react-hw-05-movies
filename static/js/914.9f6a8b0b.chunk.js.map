{"version":3,"file":"static/js/914.9f6a8b0b.chunk.js","mappings":"mRAKAA,EAAAA,EAAAA,SAAAA,QAAA,UAHiB,+BAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJU,oCAOL,IAAMC,EAAe,WAG1B,OAFYF,EAAAA,EAAAA,IAAU,wBAGvB,EAEYG,EAAkB,SAAAC,GAG7B,OAFYJ,EAAAA,EAAAA,IAAA,kBAAqBI,EAArB,KAGb,EAEYC,EAAe,SAAAD,GAG1B,OAFYJ,EAAAA,EAAAA,IAAA,kBAAqBI,EAArB,aAGb,EAEYE,EAAkB,SAAAF,GAG7B,OAFYJ,EAAAA,EAAAA,IAAA,kBAAqBI,EAArB,aAGb,EAEYG,EAAiB,SAAAC,GAG5B,OAFYR,EAAAA,EAAAA,IAAA,gCAAmCQ,GAGhD,C,2HCrCD,EAAyB,6BAAzB,EAAkE,gCAAlE,EAAkH,oCAAlH,EAAoK,kCAApK,EAAoN,kC,SCiFpN,EAxEqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOD,EAAP,KAAcE,EAAd,KACQN,GAAYO,EAAAA,EAAAA,IAAU,IAAtBP,QAEFQ,GAAWC,EAAAA,EAAAA,MAKXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEnDC,EACNV,EADMU,YAAaC,EACnBX,EADmBW,MAAOC,EAC1BZ,EAD0BY,OAAQC,EAClCb,EADkCa,SAAUC,EAC5Cd,EAD4Cc,aAAcC,EAC1Df,EAD0De,aAW5D,OAJAC,EAAAA,EAAAA,YAAU,YACRrB,EAAAA,EAAAA,IAAgBC,GAASqB,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAchB,EAASgB,EAAvB,GAC/B,GAAE,CAACtB,KAGF,iCACE,SAAC,KAAD,CAAMuB,GAAIb,EAAoBc,QAASC,UAAWC,EAAlD,4CAICX,IACC,iBAAKU,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACEC,IAAKb,EApCF,kCAoC2BA,EAlC1C,gEAmCYc,IAAKb,OAGT,iBAAKU,UAAWC,EAAhB,WACE,0BACGX,EADH,KACYG,EAAeA,EAAaW,MAAM,EAAG,GAAK,UADtD,QAGA,yCAAgC,GAAfV,GAAmBW,QAAQ,GAA5C,QACA,sCACA,uBAAIb,KACJ,oCACA,uBAAID,EAAOe,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAI/C,iBAAKT,UAAWC,EAAhB,WACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMH,GAAG,OAAT,qBAKF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAON,SAAC,EAAAY,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/moviesApi.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst ENDPOINT = 'https://api.themoviedb.org/';\nconst KEY = 'e6e5040957b423292e46b69ab1c4061a';\n\naxios.defaults.baseURL = `${ENDPOINT}`;\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getTrendList = () => {\n  const res = axios.get('/3/trending/movie/day');\n\n  return res;\n};\n\nexport const getMovieDetails = movieId => {\n  const res = axios.get(`3/movie/${movieId}?`);\n\n  return res;\n};\n\nexport const getCastMovie = movieId => {\n  const res = axios.get(`3/movie/${movieId}/credits?`);\n\n  return res;\n};\n\nexport const getReviewsMovie = movieId => {\n  const res = axios.get(`3/movie/${movieId}/reviews?`);\n\n  return res;\n};\n\nexport const getSearchMovie = movie => {\n  const res = axios.get(`3/search/movie?&query=${movie}`);\n\n  return res;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__uXZxd\",\"movieInfo\":\"MovieDetails_movieInfo__4EKMk\",\"posterWrapper\":\"MovieDetails_posterWrapper__RTGm3\",\"infoWrapper\":\"MovieDetails_infoWrapper__4SlYR\",\"additionInf\":\"MovieDetails_additionInf__ISzu7\"};","import { Loader } from 'components/Loader/Loader';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../../api/moviesApi';\nimport css from './MovieDetails.module.css';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst defaultFoto =\n  'https://place-hold.it/350x500/ffffff/000/e3e3e3&text=no_photo';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams('');\n\n  const location = useLocation();\n  // console.log('details', location);\n  // console.log('details-loc', location.state.from);\n  // Сохраняется location.state.from если перейти еще в грубь, можно в useRef.\n  // или прокидывать дальше state={{ from: location.state.from }}\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const { poster_path, title, genres, overview, release_date, vote_average } =\n    movie;\n\n  // console.log(genres);\n  // console.log(movie);\n  // genres.map(genre => (genre.name));\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(({ data }) => setMovie(data));\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current} className={css.button}>\n        {/* <Link to={location.state.from} className={css.button}> */}\n        Назад\n      </Link>\n      {title && (\n        <div className={css.movieInfo}>\n          <div className={css.posterWrapper}>\n            <img\n              src={poster_path ? BASE_URL + poster_path : defaultFoto}\n              alt={title}\n            />\n          </div>\n          <div className={css.infoWrapper}>\n            <h2>\n              {title} ({release_date ? release_date.slice(0, 4) : 'no date'})\n            </h2>\n            <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>{genres.map(genre => genre.name).join(' ')}</p>\n          </div>\n        </div>\n      )}\n      <div className={css.additionInf}>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n            {/* <Link to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </Link> */}\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n            {/* <Link to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </Link> */}\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<Loader/>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","getTrendList","getMovieDetails","movieId","getCastMovie","getReviewsMovie","getSearchMovie","movie","useState","setMovie","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","poster_path","title","genres","overview","release_date","vote_average","useEffect","then","data","to","current","className","css","src","alt","slice","toFixed","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}